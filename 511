#define _CRT_SECURE_NO_WARNINGS 1



#include <stdio.h>
#include <stdlib.h>

//int is_leap_year(int y)
//
//{
//
//	if (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0))
//	{
//		return 1;
//	}
//	else
//		return 0;
//		
//	
//
//
//}
//
//
//	int main(){
//		int year = 0;
//		scanf("%d", &year);
//
//
//		if (is_leap_year(year) == 1)
//
//		{
//
//			printf("是闰年\n ");
//
//		}
//		else
//		{
//			printf("不是闰年\n ");
//		}
//
//
//		system("pause");
//
//		return 0;
//	}

//#include <math.h>
//int is_prime(int n)
//
//{
//
//	int j = 0;
//
//	for(j=2; j<=sqrt(n); j++)
//
//	{
//
//		if(n%j == 0)
//
//			return 0;
//
//	}
//
//	return 1;
//
//}
//
//
//
//int main()
//
//{
//	int i = 0;	
//	scanf("%d", &i);
//		if(is_prime(i) == 1)
//		{
//			printf("%d是素数 ", i);
//		}
//		else
//		{
//			printf("%d不是素数 ", i);
//		}
//
//	system("pause");
//
//	return 0;
//
//}



//void Swap1(int x, int y)
//
//{
//
//	int tmp = 0;
//
//	tmp = x;
//
//	x = y;
//
//	y = tmp;
//
//}



//void Swap2(int* px, int* py)
//
//{
//
//	int tmp = 0;
//
//	tmp = *px;
//
//	*px = *py;
//
//	*py = tmp;
//
//}
//
//
//
//int main()
//{
//	int a = 10;
//	int b = 20;
//	printf("a = %d b = %d\n", a, b);
//	Swap2(&a, &b);
//	printf("a = %d b = %d\n",a, b);
//	system("pause");
//	return 0;
//
//}
		


//1*1=1

//2*1=2 2*2=4

//3*1=3 3*2=6 3*3=9

//...

//
//void test(int x, int k)
//{
//	for (x  = 1; x <= k; x++)
//
//	{
//
//		//打印一行
//
//		int j = 0;
//
//		for (j = 1; j <= x; j++)
//
//		{
//
//			printf("%d*%d=%d ", x, j, x*j);
//
//		}
//
//		printf("\n");
//
//	}
//}
//int main()
//
//{
//
//	int i = 0;
//	
//	int k = 0;
//	scanf("%d", &k);
//
//	test(i, k);
//	system("pause");
//
//	return 0;
//
//}




void init(int arr[], int sz)
{
	int i = 0;
	for (i = 0; i< sz; i++)
	{
		arr[i] = i;
	}
}
void emept(int arr[], int sz)
{
	int i = 0;
	for (i = 0; i< sz; i++)
	{
		arr[i] = 0;
	}
}
void reverse(int arr[], int sz)
{
	int i = 0;
	for (i = 0; i< sz; i++)
	{
		arr[i] = sz - 1 - i;
	}
}
int main()
{
	int sz = 0;
	int i = 0;
	int arr[32] = { 0 };
	sz = sizeof(arr) / sizeof(arr[0]);
	init(arr, sz);
	for (i = 0; i< sz; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	emept(arr, sz);
	for (i = 0; i< sz; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	reverse(arr, sz);
	for (i = 0; i< sz; i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	system("pause");
	return 0;
}
